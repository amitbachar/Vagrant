# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
VAGRANTFILE_API_VERSION = "2"

$script = <<-SCRIPT
echo $1
date > /etc/vagrant_provisioned_at
SCRIPT

## usage 

## vagrant --hostname=host1.bachar.com up
## vagrant --hostname=host1.bachar.com provision
## with arguments to the provision script
## SHELL_ARGS='-d yes -n my-nginx -p 8080' vagrant --hostname=host1.bachar.com up
 
hostname = 'host1.bachar.com'
user = 'amitbac'

require 'getoptlong'

opts = GetoptLong.new(
  [ '--hostname', GetoptLong::OPTIONAL_ARGUMENT ]
)

opts.each do |opt, arg|
  case opt
    when '--hostname'
      hostname=arg
  end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #Box location 
  #config.vm.box_url = "centos"
  config.vm.post_up_message = "machine name is:" + hostname
  config.vm.box = "centos/7"
  config.vm.define hostname
  config.vm.hostname = hostname
  config.vm.provider "virtualbox" do |v|
      v.memory = 1024
      #v.name = "myCentos7"
      #file_to_disk = '2nd_disk.vdi'
      #v.customize ['createhd', '--filename', file_to_disk, '--size', 5 * 1024]  
      #v.customize ['storageattach', :id, '--storagectl', 'SATA', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
  end

  config.vm.network "private_network", type: "dhcp"
  #config.vm.network "private_network", ip: "192.168.50.4"
  #config.vm.synced_folder "./playbooks", "/playbooks"
  config.vm.provision "shell" do |s|
    s.inline = $script
    s.args   = "'I am provisioning...!'"
  end
  ## to use it SHELL_ARGS='arg1 arg2' vagrant provision
  #config.vm.provision :shell, path: "scripts/provision.sh", args: ENV['SHELL_ARGS']
  #config.vm.provision :shell, path: "scripts/provision.sh", args: user
  config.vm.provision "shell" do |s|
    s.path = "scripts/provision.sh"
    s.args = ENV['SHELL_ARGS'] 
  end
  #config.vm.provision "ansible" do |ansible|
  #  ansible.playbook = "playbooks/install-docker.yml"
  #end

end
